<?php
// Standard linked resources (first-degree)
$options = [
    'page' => $this->params()->fromQuery('page', 1),
    'perPage' => 25,
    'resourceProperty' => $this->params()->fromQuery('resource_property')
];

// Site setting check - apply to all queries
$excludeResourcesNotInSite = $this->siteSetting('exclude_resources_not_in_site', false);
if ($excludeResourcesNotInSite) {
    $options['siteId'] = $this->currentSite()->id();
}

// Get standard linked resources HTML output
$standardLinkedResources = $resource->displaySubjectValues($options);

// Check if we should show second-degree resources
$showSecondDegree = $this->params()->fromQuery('show_second_degree', false);
$showSecondDegree = 1;

// Get the current resource's template ID
$currentTemplateId = null;
if ($resource->resourceTemplate()) {
    $currentTemplateId = $resource->resourceTemplate()->id();
}
?>

<?php if ($standardLinkedResources): ?>
<div id="resources-linked">
    <h3><?php echo $this->translate('Linked Resources'); ?></h3>
    <?php echo $standardLinkedResources; ?>
</div>
<?php endif; ?>

<?php
// Configuration mapping for different resource template types
// Format: templateId => [config]
$secondDegreeConfigs = [
    // Organization template (ID: 18)
    18 => [
        'title' => 'People Who Participated in Events at This Organization',
        'firstDegreeResourceType' => 'items',
        'secondDegreeResourceType' => 'items',
        'firstDegreeTemplate' => 16, // Event template ID
        'secondDegreeTemplate' => 17, // Person template ID
        'firstDegreePropertyIds' => [13], // Properties connecting Organization -> Event
        'secondDegreePropertyIds' => [501] // Properties connecting Event -> Person
    ],
    // Project template (example: ID: 10009)
    10009 => [
        'title' => 'Publications Related to This Project',
        'firstDegreeResourceType' => 'items',
        'secondDegreeResourceType' => 'items',
        'firstDegreeTemplate' => 20, // Research Activity template ID
        'secondDegreeTemplate' => 21, // Publication template ID
        'firstDegreePropertyIds' => [7, 8], // Properties connecting Project -> Research Activity
        'secondDegreePropertyIds' => [9, 10] // Properties connecting Research Activity -> Publication
    ]
    // Add more configurations for other template IDs as needed
];

// Only proceed if we have a configuration for the current template
if ($showSecondDegree && $currentTemplateId && isset($secondDegreeConfigs[$currentTemplateId])):
    $config = $secondDegreeConfigs[$currentTemplateId];
    
    echo "<!-- Debug: Processing second-degree resources for template ID: $currentTemplateId -->";

    // Configure options for the second-degree resources
    $secondDegreeOptions = [
        'page' => $this->params()->fromQuery('page_second', 1), // Different pagination parameter
        'perPage' => 25,
        'firstDegreeResourceType' => $config['firstDegreeResourceType'],
        'secondDegreeResourceType' => $config['secondDegreeResourceType'],
        'firstDegreeTemplate' => $config['firstDegreeTemplate'],
        'secondDegreeTemplate' => $config['secondDegreeTemplate'],
        'firstDegreePropertyIds' => $config['firstDegreePropertyIds'],
        'secondDegreePropertyIds' => $config['secondDegreePropertyIds'],
        'showConnectingResource' => true,
    ];
    
    // Apply site setting filter if needed
    if ($excludeResourcesNotInSite) {
        $secondDegreeOptions['siteId'] = $this->currentSite()->id();
    }
    
    // Get second-degree linked resources HTML output
    $secondDegreeResources = $this->SecondDegreeResources($resource, $secondDegreeOptions);
    
    if ($secondDegreeResources): 
?>
<div id="second-degree-resources-linked">
    <h3><?php echo $this->translate($config['title']); ?></h3>
    <?php echo $secondDegreeResources; ?>
</div>
<?php 
    endif;
endif;
?>